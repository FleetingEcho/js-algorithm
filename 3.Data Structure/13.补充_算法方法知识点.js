// ! 递归本质是不断压栈再不断出栈。是自上而下解决问题，等待下面返回上来的结果

// ! 动态规划是自下而上解决问题，从已知的 case 出发，存储前面的状态，迭代出最后的结果。

/* 
贪心算法基础

贪心算法从问题的某一个初始解出发，逐步逼近给定的目标，以便尽快求出更好的解。
当达到算法中的某一步不能再继续前进时，就停止算法，给出一个近似解。
由贪心算法的特点和思路可看出，贪心算法存在以下3个问题。

① 不能保证最后的解是最优的。
② 不能用来求最大或最小解问题。
③ 只能求满足某些约束条件的可行解的范围。

实现该算法的基本过程如下。

（1）从问题的某一初始解出发。
（2）while能向给定总目标前进一步。
（3）求出可行解的一个解元素。
（4）由所有解元素组合成问题的一个可行解。
*/


/* 
! 回溯法 -----也叫试探法
它先暂时放弃关于问题规模大小的限制，并将问题的候选解按某种顺序
逐一进行枚举和检验。当发现当前候选解不可能是正确的解时，
就选择下一个候选解。

*　在试探算法中，放弃当前候选解，并继续寻找下一个候选解的过程称为回溯。
*/