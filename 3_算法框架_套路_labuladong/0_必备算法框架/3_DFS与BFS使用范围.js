/* 
> BFS   适用于最短类问题(最小，最少)。会用到队列queue[], 同时必须用Set做备忘录，防止重复。
>       每一步就是一层搜索，集体行动
>       BFS搜索过程中遇到的解一定是离根最近的，所以遇到一个解，一定就是最优解，此时搜索算法可以终止。

>双向BFS  使用时必须知道终点是什么。
>         从起点和终点同时开始扩散，当两边有交集的时候停止。

> DFS   适用搜索全部的解，或者必须要走到最深处的问题。
>       会优先访问没有访问过的点，属于 单打独斗
>       不需要保存搜索过程中的状态，空间复杂度低。
>       递归深度 N 最好不要过大.像二维数组的题目，N小于20的，适用DFS。
>       而一般 N<= 200，N<=1000这种，一定不能用DFS去做。会爆栈



>特例   如果遇到二维数组，则DFS 和 BFS 均可， 只要 N 不是特别大。

*/