/*
!!堆栈溢出

1）递归的本质就是重复调用本身的过程，本身是什么？
2）函数中变量是存储到系统中的栈中的，栈数据结构的特点就是先进后出，后进先出。
3）递归的过程，函数中的变量一直不断的压栈，由于我们系统栈或虚拟机栈空间是非常小的，当栈压满之后，再压时，就会导致堆栈溢出。



*解决办法1 设置递归深度
  简单的理解就是，如果递归超过我们设置的深度，我们就退出，不再递归下去
  depth++; if(depth>1000) throw 'error'

* 有些递归问题中，存在重复计算问题，比如求斐波那契数列，我们会发现有很多重复递归计算的值，重复计算会导致程序的时间复杂度很高，而且是指数级别的，导致我们的程序效率低下。

* 解决办法   使用散列表Map进行保存
我们把已经计算过的值保存起来，每次递归计算之前先检查一下保存的数据有没有该数据。
如果有，我们拿出来直接用。如果没有，我们计算出来保存起来。一般我们用散列表来保存。
（所谓的散列表就是键值对的形式，如 map ）

*/